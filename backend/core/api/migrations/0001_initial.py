# Generated by Django 3.2.25 on 2024-08-26 06:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('account_name', models.CharField(blank=True, max_length=20, null=True)),
                ('account_code', models.CharField(blank=True, max_length=20, null=True)),
                ('trade_name', models.CharField(blank=True, max_length=20, null=True)),
                ('main_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('fax', models.CharField(blank=True, max_length=20, null=True)),
                ('representive', models.CharField(blank=True, max_length=20, null=True)),
                ('representive_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('manager', models.CharField(blank=True, max_length=20, null=True)),
                ('manager_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('account_holder', models.CharField(blank=True, max_length=20, null=True)),
                ('account_num', models.CharField(blank=True, max_length=50, null=True)),
                ('classify', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'Account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_code', models.CharField(blank=True, max_length=100, null=True)),
                ('company_num', models.CharField(blank=True, max_length=100, null=True)),
                ('representative', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('main_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('fax', models.CharField(blank=True, max_length=100, null=True)),
                ('manager_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('account_holder', models.CharField(blank=True, max_length=100, null=True)),
                ('account_num', models.CharField(blank=True, max_length=100, null=True)),
                ('classify', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Account_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assemble',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('assembledate', models.DateTimeField(db_column='assembleDate')),
                ('assembleworker', models.CharField(db_column='assembleWorker', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('printstate', models.CharField(db_column='printState', max_length=20)),
            ],
            options={
                'db_table': 'assemble',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bom',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=45, null=True)),
                ('level1', models.CharField(blank=True, db_column='Level1', max_length=4, null=True)),
                ('level2', models.CharField(blank=True, db_column='Level2', max_length=4, null=True)),
                ('level3', models.CharField(blank=True, db_column='Level3', max_length=4, null=True)),
                ('items', models.CharField(blank=True, db_column='Items', max_length=30, null=True)),
                ('items_name', models.CharField(blank=True, db_column='Items_Name', max_length=40, null=True)),
                ('standard', models.CharField(blank=True, db_column='Standard', max_length=28, null=True)),
                ('required', models.CharField(blank=True, db_column='Required', max_length=10, null=True)),
                ('supplier', models.CharField(blank=True, db_column='Supplier', max_length=20, null=True)),
                ('material', models.CharField(blank=True, db_column='Material', max_length=10, null=True)),
                ('material_name', models.CharField(blank=True, db_column='Material_name', max_length=20, null=True)),
                ('greade', models.CharField(blank=True, db_column='Greade', max_length=30, null=True)),
                ('maker', models.CharField(blank=True, db_column='Maker', max_length=20, null=True)),
                ('supplier2', models.CharField(blank=True, db_column='Supplier2', max_length=20, null=True)),
                ('mold', models.CharField(blank=True, db_column='Mold', max_length=10, null=True)),
                ('parts', models.CharField(blank=True, db_column='Parts', max_length=10, null=True)),
                ('single_parts', models.CharField(blank=True, db_column='Single_Parts', max_length=10, null=True)),
                ('runner_n_field', models.CharField(blank=True, db_column='Runner(/n)', max_length=10, null=True)),
                ('number_221231', models.CharField(blank=True, db_column='221231', max_length=15, null=True)),
                ('hierarchy1', models.CharField(blank=True, db_column='Hierarchy1', max_length=50, null=True)),
                ('hierarchy2', models.CharField(blank=True, db_column='Hierarchy2', max_length=50, null=True)),
                ('hierarchy3', models.CharField(blank=True, db_column='Hierarchy3', max_length=50, null=True)),
            ],
            options={
                'db_table': 'BOM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bom2',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('finished', models.CharField(blank=True, max_length=100, null=True)),
                ('injection_or_assembly', models.CharField(blank=True, max_length=100, null=True)),
                ('car_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_1', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_1', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_1', models.FloatField(blank=True, null=True)),
                ('material_division_1', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_2', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_2', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_2', models.FloatField(blank=True, null=True)),
                ('material_division_2', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_3', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_3', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_3', models.FloatField(blank=True, null=True)),
                ('material_division_3', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_4', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_4', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_4', models.FloatField(blank=True, null=True)),
                ('material_division_4', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_5', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_5', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_5', models.FloatField(blank=True, null=True)),
                ('material_division_5', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_6', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_6', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_6', models.FloatField(blank=True, null=True)),
                ('material_division_6', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_7', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_7', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_7', models.FloatField(blank=True, null=True)),
                ('material_division_7', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('cavity', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_price', models.CharField(blank=True, max_length=100, null=True)),
                ('material_or_supplier', models.CharField(blank=True, max_length=100, null=True)),
                ('production_per_hour', models.CharField(blank=True, max_length=100, null=True)),
                ('packaging_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'BOM2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bom2Backup',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('finished', models.CharField(blank=True, max_length=100, null=True)),
                ('injection_or_assembly', models.CharField(blank=True, max_length=100, null=True)),
                ('car_type', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_1', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_1', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_1', models.FloatField(blank=True, null=True)),
                ('material_division_1', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_2', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_2', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_2', models.FloatField(blank=True, null=True)),
                ('material_division_2', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_3', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_3', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_3', models.FloatField(blank=True, null=True)),
                ('material_division_3', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_4', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_4', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_4', models.FloatField(blank=True, null=True)),
                ('material_division_4', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_5', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_5', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_5', models.FloatField(blank=True, null=True)),
                ('material_division_5', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_6', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_6', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_6', models.FloatField(blank=True, null=True)),
                ('material_division_6', models.CharField(blank=True, max_length=100, null=True)),
                ('material_num_7', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name_7', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count_7', models.FloatField(blank=True, null=True)),
                ('material_division_7', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('cavity', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_price', models.CharField(blank=True, max_length=100, null=True)),
                ('material_or_supplier', models.CharField(blank=True, max_length=100, null=True)),
                ('production_per_hour', models.CharField(blank=True, max_length=100, null=True)),
                ('packaging_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'BOM2_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BomExample',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('no', models.CharField(blank=True, max_length=11, null=True)),
                ('partnumber', models.CharField(blank=True, db_column='partNumber', max_length=30, null=True)),
                ('productname', models.CharField(blank=True, db_column='productName', max_length=400, null=True)),
                ('sellingprice', models.CharField(blank=True, db_column='sellingPrice', max_length=11, null=True)),
                ('purchaseprice', models.CharField(blank=True, db_column='purchasePrice', max_length=11, null=True)),
                ('productionlocation', models.CharField(blank=True, db_column='productionLocation', max_length=30, null=True)),
                ('packing_note', models.CharField(blank=True, db_column='Packing_Note', max_length=30, null=True)),
                ('quantity_pack', models.CharField(blank=True, db_column='quantity_PACK', max_length=11, null=True)),
                ('quantity_box', models.CharField(blank=True, db_column='quantity_BOX', max_length=11, null=True)),
                ('packing2_note', models.CharField(blank=True, db_column='Packing2_Note', max_length=30, null=True)),
                ('quantity_pack2', models.CharField(blank=True, db_column='quantity_PACK2', max_length=30, null=True)),
                ('quantity_box2', models.CharField(blank=True, db_column='quantity_BOX2', max_length=30, null=True)),
                ('trayname1', models.CharField(blank=True, db_column='trayName1', max_length=30, null=True)),
                ('requirement1', models.CharField(blank=True, max_length=11, null=True)),
                ('covername2', models.CharField(blank=True, db_column='coverName2', max_length=30, null=True)),
                ('requirement2', models.CharField(blank=True, max_length=11, null=True)),
                ('covername3', models.CharField(blank=True, db_column='coverName3', max_length=30, null=True)),
                ('requirement3', models.CharField(blank=True, max_length=11, null=True)),
                ('covername4', models.CharField(blank=True, db_column='coverName4', max_length=30, null=True)),
                ('requirement4', models.CharField(blank=True, max_length=11, null=True)),
                ('remaininglocation', models.CharField(blank=True, max_length=30, null=True)),
                ('part1', models.CharField(blank=True, max_length=30, null=True)),
                ('hs_gcavity', models.CharField(blank=True, db_column='HS_GCavity', max_length=30, null=True)),
                ('productname1', models.CharField(blank=True, db_column='productName1', max_length=400, null=True)),
                ('usage1', models.CharField(blank=True, db_column='USAGE1', max_length=11, null=True)),
                ('part2', models.CharField(blank=True, max_length=30, null=True)),
                ('productname2', models.CharField(blank=True, db_column='productName2', max_length=400, null=True)),
                ('usage2', models.CharField(blank=True, db_column='USAGE2', max_length=11, null=True)),
                ('part3', models.CharField(blank=True, max_length=30, null=True)),
                ('productname3', models.CharField(blank=True, db_column='productName3', max_length=400, null=True)),
                ('usage3', models.CharField(blank=True, db_column='USAGE3', max_length=11, null=True)),
                ('part4', models.CharField(blank=True, max_length=30, null=True)),
                ('productname4', models.CharField(blank=True, db_column='productName4', max_length=400, null=True)),
                ('usage4', models.CharField(blank=True, db_column='USAGE4', max_length=11, null=True)),
                ('part5', models.CharField(blank=True, max_length=30, null=True)),
                ('productname5', models.CharField(blank=True, db_column='productName5', max_length=400, null=True)),
                ('usage5', models.CharField(blank=True, db_column='USAGE5', max_length=11, null=True)),
                ('part6', models.CharField(blank=True, max_length=30, null=True)),
                ('productname6', models.CharField(blank=True, db_column='productName6', max_length=400, null=True)),
                ('usage6', models.CharField(blank=True, db_column='USAGE6', max_length=11, null=True)),
                ('inspectiondimensionrange1', models.CharField(blank=True, db_column='InspectionDimensionRange1', max_length=30, null=True)),
                ('inspectiondimensionrange2', models.CharField(blank=True, db_column='InspectionDimensionRange2', max_length=30, null=True)),
                ('inspectiondimensionrange3', models.CharField(blank=True, db_column='InspectionDimensionRange3', max_length=30, null=True)),
                ('inspectiondimensionrange4', models.CharField(blank=True, db_column='InspectionDimensionRange4', max_length=30, null=True)),
                ('inspectiondimensionrange5', models.CharField(blank=True, db_column='InspectionDimensionRange5', max_length=30, null=True)),
                ('inspectiondimensiondrawing', models.CharField(blank=True, db_column='InspectionDimensionDrawing', max_length=30, null=True)),
                ('datetime', models.DateTimeField(blank=True, db_column='dateTime', null=True)),
            ],
            options={
                'db_table': 'BOM_example',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currentassemblestock',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('workingnum', models.CharField(db_column='workingNum', max_length=100)),
                ('dong', models.CharField(max_length=100)),
                ('facility', models.CharField(max_length=100)),
                ('work', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(max_length=100)),
                ('assemblenumber', models.CharField(db_column='assembleNumber', max_length=30)),
                ('ordercount', models.IntegerField(db_column='orderCount')),
                ('assemblecount', models.IntegerField(db_column='assembleCount')),
                ('remaincount', models.IntegerField(db_column='remainCount')),
                ('stock', models.IntegerField()),
                ('assembleworker', models.CharField(db_column='assembleWorker', max_length=100)),
                ('assembledate', models.DateField(db_column='assembleDate')),
                ('fk', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('completedate', models.DateField(blank=True, db_column='completeDate', null=True)),
                ('storage', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'currentAssembleStock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currentdefectlist',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('packingnum', models.CharField(db_column='packingNum', max_length=30)),
                ('product', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=30)),
                ('order_num', models.CharField(max_length=50)),
                ('normalcount', models.IntegerField(db_column='normalCount')),
                ('defectcount', models.IntegerField(db_column='defectCount')),
                ('processtype', models.CharField(db_column='processType', max_length=20)),
                ('defectdate', models.DateField(db_column='defectDate')),
            ],
            options={
                'db_table': 'currentDefectList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currenthalfassemblestock',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('dong', models.CharField(max_length=100)),
                ('facility', models.CharField(max_length=100)),
                ('work', models.CharField(max_length=100)),
                ('product', models.CharField(max_length=100)),
                ('assemblenumber', models.CharField(db_column='assembleNumber', max_length=30)),
                ('ordercount', models.IntegerField(db_column='orderCount')),
                ('assemblecount', models.IntegerField(db_column='assembleCount')),
                ('remaincount', models.IntegerField(db_column='remainCount')),
                ('stock', models.IntegerField()),
                ('assembleworker', models.CharField(db_column='assembleWorker', max_length=100)),
                ('assembledate', models.DateField(db_column='assembleDate')),
            ],
            options={
                'db_table': 'currentHalfAssembleStock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currentpackingwaitstock',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('workingnum', models.CharField(db_column='workingNum', max_length=100)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(max_length=100)),
                ('assemblenumber', models.CharField(db_column='assembleNumber', max_length=30)),
                ('stock', models.IntegerField()),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('completedate', models.DateField(blank=True, db_column='completeDate', null=True)),
            ],
            options={
                'db_table': 'currentPackingWaitStock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currentpartstock',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('stock', models.IntegerField()),
                ('partinputdate', models.DateTimeField(db_column='partInputDate')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('storage', models.CharField(blank=True, max_length=30, null=True)),
                ('usingworkingnum', models.CharField(db_column='usingWorkingNum', max_length=30)),
            ],
            options={
                'db_table': 'currentPartStock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentPrimaryMaterialStock',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('stock', models.IntegerField()),
                ('partinputdate', models.DateTimeField(db_column='partInputDate')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('storage', models.CharField(blank=True, max_length=30, null=True)),
                ('usingworkingnum', models.CharField(db_column='usingWorkingNum', max_length=30)),
                ('is_used', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'current_primary_material_stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerQuality',
            fields=[
                ('no', models.AutoField(db_column='No', primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('occur_date', models.DateTimeField(blank=True, null=True)),
                ('occur_location', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_count', models.CharField(blank=True, max_length=100, null=True)),
                ('phenomenon', models.CharField(blank=True, max_length=3000, null=True)),
                ('reason', models.CharField(blank=True, max_length=3000, null=True)),
                ('solution', models.CharField(blank=True, max_length=3000, null=True)),
                ('progress', models.CharField(blank=True, max_length=3000, null=True)),
                ('schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('gyr', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('writer', models.CharField(blank=True, max_length=100, null=True)),
                ('img_info', models.TextField(blank=True, null=True)),
                ('product_load_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'customer_quality',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerQualityProductData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product_load_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'customer_quality_product_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('example1', models.TextField(blank=True, null=True)),
                ('example2', models.TextField(blank=True, null=True)),
                ('defect_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'defect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DefectLog',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('dt', models.DateTimeField()),
                ('lim', models.IntegerField()),
                ('defect', models.IntegerField()),
            ],
            options={
                'db_table': 'defect_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('emp_num', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=20, null=True)),
                ('rank', models.CharField(blank=True, max_length=20, null=True)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=20, null=True)),
                ('entering_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('schedule_day', models.DateField(blank=True, null=True)),
                ('schedule_night', models.DateField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('equip', models.CharField(blank=True, max_length=20, null=True)),
                ('manufacturing', models.CharField(blank=True, max_length=20, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('input_date', models.DateField(blank=True, null=True)),
                ('division', models.CharField(blank=True, max_length=20, null=True)),
                ('tiebar', models.CharField(blank=True, max_length=20, null=True)),
                ('screw', models.CharField(blank=True, max_length=20, null=True)),
                ('clamp', models.CharField(blank=True, max_length=20, null=True)),
                ('number', models.CharField(blank=True, max_length=20, null=True)),
                ('dong', models.CharField(blank=True, max_length=20, null=True)),
                ('quarterly_inspection', models.DateField(blank=True, null=True)),
                ('semi_annual_inspection', models.DateField(blank=True, null=True)),
                ('yearly_inspection', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'facility',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacilityHistory',
            fields=[
                ('no', models.BigAutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateField(blank=True, null=True)),
                ('breakdown', models.CharField(blank=True, max_length=100, null=True)),
                ('solution', models.CharField(blank=True, max_length=100, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('confirm', models.CharField(blank=True, max_length=100, null=True)),
                ('number', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'facility_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacilityTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('inputdate', models.DateField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=100, null=True)),
                ('equip', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('serial', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturing', models.CharField(blank=True, max_length=100, null=True)),
                ('manufactured_date', models.DateField(blank=True, null=True)),
                ('bought_date', models.DateField(blank=True, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('bought_from', models.CharField(blank=True, max_length=100, null=True)),
                ('after_service', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('img_path', models.TextField(blank=True, null=True)),
                ('dong', models.CharField(blank=True, max_length=100, null=True)),
                ('quarterly', models.DateField(blank=True, null=True)),
                ('semi_annual', models.DateField(blank=True, null=True)),
                ('yearly', models.DateField(blank=True, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'facility_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactoryTest',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('factory_name', models.CharField(blank=True, max_length=100, null=True)),
                ('factory_region', models.CharField(blank=True, max_length=100, null=True)),
                ('factory_dong', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'factory_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inputfaultycreate',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('dong', models.CharField(max_length=10)),
                ('facility', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=30)),
                ('productname', models.CharField(db_column='productName', max_length=30)),
                ('day', models.CharField(max_length=30)),
                ('worker', models.CharField(max_length=30)),
                ('worktime', models.FloatField(db_column='workTime')),
                ('ct', models.FloatField()),
                ('targetcount', models.IntegerField(db_column='targetCount')),
                ('cavity', models.FloatField()),
                ('targetpercent', models.FloatField(db_column='targetPercent')),
                ('createcount', models.IntegerField(db_column='createCount')),
                ('faultycount', models.IntegerField(db_column='faultyCount')),
                ('note', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=10)),
                ('inputdate', models.DateField(db_column='inputDate')),
                ('transformation', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inputFaultyCreate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inputfaultyinspection',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('dong', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=30)),
                ('productname', models.CharField(db_column='productName', max_length=100)),
                ('createcount', models.IntegerField(db_column='createCount')),
                ('faultycount', models.IntegerField(db_column='faultyCount')),
                ('note', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=10)),
                ('inputdate', models.DateField(db_column='inputDate')),
                ('dirty', models.IntegerField(blank=True, null=True)),
                ('unmolded', models.IntegerField(blank=True, db_column='Unmolded', null=True)),
                ('short', models.IntegerField(blank=True, db_column='Short', null=True)),
                ('transformation', models.IntegerField(blank=True, null=True)),
                ('filmed', models.IntegerField(blank=True, db_column='Filmed', null=True)),
            ],
            options={
                'db_table': 'inputFaultyInspection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('uid', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('whole_half', models.CharField(blank=True, max_length=100, null=True)),
                ('injection_assembly', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_stock', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(max_length=100)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count', models.CharField(blank=True, max_length=100, null=True)),
                ('maker', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('package_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemBackup',
            fields=[
                ('uid', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('whole_half', models.CharField(blank=True, max_length=100, null=True)),
                ('injection_assembly', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_stock', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('material_count', models.CharField(blank=True, max_length=100, null=True)),
                ('maker', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('package_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_stock', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('maker', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('package_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemMaterialBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_stock', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('maker', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('package_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item_material_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemPrimaryMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_stock', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('maker', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('package_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item_primary_material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemPrimaryMaterialBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_stock', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('maker', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
                ('package_unit', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'item_primary_material_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('loginid', models.CharField(db_column='loginID', max_length=30)),
                ('logincount', models.IntegerField(db_column='loginCount')),
                ('logindatetime', models.DateTimeField(db_column='loginDateTime')),
            ],
            options={
                'db_table': 'login_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lv2Assembly',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('partnumber', models.CharField(blank=True, db_column='PartNumber', max_length=20, null=True)),
                ('lotnumber', models.CharField(blank=True, db_column='LotNumber', max_length=20, null=True)),
                ('quantity', models.CharField(blank=True, db_column='Quantity', max_length=20, null=True)),
                ('datetime', models.DateTimeField(db_column='DateTime')),
            ],
            options={
                'db_table': 'Lv2_Assembly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=50, null=True)),
                ('equipment', models.CharField(blank=True, max_length=50, null=True)),
                ('datetime', models.DateTimeField(db_column='DateTime')),
            ],
            options={
                'db_table': 'Management',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MassTestingInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('dong', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(blank=True, max_length=100, null=True)),
                ('inspection_date', models.DateField(blank=True, null=True)),
                ('inspector', models.CharField(blank=True, max_length=100, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('num', models.CharField(blank=True, max_length=100, null=True)),
                ('gauge', models.CharField(blank=True, max_length=100, null=True)),
                ('inspection_item', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_1ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_2ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_3ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_4ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_5ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_6ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_7ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_8ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_9ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_10ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_11ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_12ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_13ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_14ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_15ca', models.CharField(blank=True, max_length=100, null=True)),
                ('chomul_16ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_1ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_2ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_3ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_4ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_5ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_6ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_7ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_8ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_9ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_10ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_11ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_12ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_13ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_14ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_15ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jungmul_16ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_1ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_2ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_3ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_4ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_5ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_6ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_7ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_8ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_9ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_10ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_11ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_12ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_13ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_14ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_15ca', models.CharField(blank=True, max_length=100, null=True)),
                ('jongmul_16ca', models.CharField(blank=True, max_length=100, null=True)),
                ('day_or_night', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'mass_testing_inspection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MassTestingStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('num', models.CharField(blank=True, max_length=100, null=True)),
                ('gauge', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(blank=True, max_length=100, null=True)),
                ('standard', models.CharField(blank=True, max_length=100, null=True)),
                ('upper_offset', models.FloatField(blank=True, null=True)),
                ('lower_offset', models.FloatField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('refer_img1', models.TextField(blank=True, null=True)),
                ('refer_img2', models.TextField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'mass_testing_standard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MassTestingStandardImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refer_img1', models.TextField(blank=True, null=True)),
                ('refer_img2', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'mass_testing_standard_img',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ordering_method', models.CharField(blank=True, max_length=100, null=True)),
                ('admin_info', models.CharField(blank=True, max_length=100, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturing_company', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_kg', models.IntegerField(blank=True, null=True)),
                ('unit_price', models.CharField(blank=True, max_length=100, null=True)),
                ('confirm_date', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'material',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('username', models.CharField(db_column='UserName', max_length=30)),
                ('material', models.CharField(db_column='Material', max_length=5)),
                ('monitoring', models.CharField(db_column='Monitoring', max_length=5)),
                ('packing', models.CharField(db_column='Packing', max_length=5)),
                ('pop', models.CharField(db_column='POP', max_length=5)),
                ('process', models.CharField(db_column='Process', max_length=5)),
                ('production', models.CharField(db_column='Production', max_length=5)),
                ('quality', models.CharField(db_column='Quality', max_length=5)),
                ('standard', models.CharField(db_column='Standard', max_length=5)),
                ('shipment', models.CharField(db_column='Shipment', max_length=5)),
            ],
            options={
                'db_table': 'member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberOldVersion',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('username', models.CharField(db_column='UserName', max_length=30)),
                ('wearing', models.CharField(db_column='Wearing', max_length=5)),
                ('importinspection', models.CharField(db_column='ImportInspection', max_length=5)),
                ('storeroom', models.CharField(db_column='StoreRoom', max_length=5)),
                ('assembly', models.CharField(db_column='Assembly', max_length=5)),
                ('visualinspection', models.CharField(db_column='VisualInspection', max_length=5)),
                ('packaging', models.CharField(db_column='Packaging', max_length=5)),
                ('shipmentinspection', models.CharField(db_column='ShipmentInspection', max_length=5)),
                ('shipment', models.CharField(db_column='Shipment', max_length=5)),
            ],
            options={
                'db_table': 'member_old_version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mold',
            fields=[
                ('uid', models.BigAutoField(primary_key=True, serialize=False)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('car_type', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('asset', models.CharField(blank=True, max_length=100, null=True)),
                ('producer', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_date', models.DateField(blank=True, null=True)),
                ('mold_size', models.CharField(blank=True, max_length=100, null=True)),
                ('texture', models.CharField(blank=True, max_length=100, null=True)),
                ('shot', models.CharField(blank=True, max_length=100, null=True)),
                ('item_name', models.CharField(blank=True, max_length=100, null=True)),
                ('form', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_location', models.CharField(blank=True, max_length=100, null=True)),
                ('periodic', models.CharField(blank=True, max_length=100, null=True)),
                ('wash_stand', models.CharField(blank=True, max_length=100, null=True)),
                ('cavity', models.CharField(blank=True, max_length=100, null=True)),
                ('washed', models.IntegerField(blank=True, null=True)),
                ('fixed', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoldHistory',
            fields=[
                ('uid', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('problem', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('solution', models.CharField(blank=True, max_length=100, null=True)),
                ('solution_result', models.CharField(blank=True, max_length=100, null=True)),
                ('shot_count', models.BigIntegerField(blank=True, null=True)),
                ('fix_location', models.CharField(blank=True, max_length=100, null=True)),
                ('out_date', models.DateField(blank=True, null=True)),
                ('in_date', models.DateField(blank=True, null=True)),
                ('fix_detail', models.CharField(blank=True, max_length=100, null=True)),
                ('img_info', models.TextField(blank=True, null=True)),
                ('input_date', models.DateField(blank=True, null=True)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('washed_count', models.IntegerField(blank=True, null=True)),
                ('fixed_count', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('img_list_1', models.TextField(blank=True, null=True)),
                ('img_list_2', models.TextField(blank=True, null=True)),
                ('img_list_3', models.TextField(blank=True, null=True)),
                ('img_list_4', models.TextField(blank=True, null=True)),
                ('img_list_5', models.TextField(blank=True, null=True)),
                ('img_list_6', models.TextField(blank=True, null=True)),
                ('img_list_7', models.TextField(blank=True, null=True)),
                ('img_list_8', models.TextField(blank=True, null=True)),
                ('img_list_9', models.TextField(blank=True, null=True)),
                ('img_list_10', models.TextField(blank=True, null=True)),
                ('img_list_11', models.TextField(blank=True, null=True)),
                ('img_list_12', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mold_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoldTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('mold_num', models.CharField(blank=True, max_length=20, null=True)),
                ('machine_type', models.CharField(blank=True, max_length=20, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('production_date', models.DateField(blank=True, null=True)),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('count', models.CharField(blank=True, max_length=100, null=True)),
                ('produced_by', models.CharField(blank=True, max_length=100, null=True)),
                ('guaranteed_shot', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_type', models.CharField(blank=True, max_length=100, null=True)),
                ('gate_type', models.CharField(blank=True, max_length=100, null=True)),
                ('shrink', models.CharField(blank=True, max_length=100, null=True)),
                ('cavity_count', models.CharField(blank=True, max_length=100, null=True)),
                ('slide_core', models.CharField(blank=True, max_length=100, null=True)),
                ('plock', models.CharField(blank=True, max_length=100, null=True)),
                ('note1', models.CharField(blank=True, max_length=100, null=True)),
                ('note2', models.CharField(blank=True, max_length=100, null=True)),
                ('note3', models.CharField(blank=True, max_length=100, null=True)),
                ('note4', models.CharField(blank=True, max_length=100, null=True)),
                ('note5', models.CharField(blank=True, max_length=100, null=True)),
                ('note6', models.CharField(blank=True, max_length=100, null=True)),
                ('lower_img', models.CharField(blank=True, max_length=3000, null=True)),
                ('upper_img', models.CharField(blank=True, max_length=3000, null=True)),
                ('side_img', models.CharField(blank=True, max_length=3000, null=True)),
                ('plaque_img', models.CharField(blank=True, max_length=3000, null=True)),
            ],
            options={
                'db_table': 'mold_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoldTest1',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('accum_shot', models.BigIntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('form', models.CharField(blank=True, max_length=100, null=True)),
                ('asset', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('producer', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_location', models.CharField(blank=True, max_length=100, null=True)),
                ('input_date', models.DateField(blank=True, null=True)),
                ('standard_inspection', models.IntegerField(blank=True, null=True)),
                ('mold_size', models.CharField(blank=True, max_length=100, null=True)),
                ('standard_wash', models.IntegerField(blank=True, null=True)),
                ('texture', models.CharField(blank=True, max_length=100, null=True)),
                ('machine_type', models.CharField(blank=True, max_length=100, null=True)),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('part', models.CharField(blank=True, max_length=100, null=True)),
                ('produce_date', models.DateField(blank=True, null=True)),
                ('count', models.CharField(blank=True, max_length=100, null=True)),
                ('stroke_count', models.IntegerField(blank=True, null=True)),
                ('guaranteed_shot', models.IntegerField(blank=True, null=True)),
                ('mold_type', models.CharField(blank=True, max_length=100, null=True)),
                ('gate_type', models.CharField(blank=True, max_length=100, null=True)),
                ('shrink', models.CharField(blank=True, max_length=100, null=True)),
                ('cavity', models.CharField(blank=True, max_length=100, null=True)),
                ('slide_core', models.CharField(blank=True, max_length=100, null=True)),
                ('p_lock', models.CharField(blank=True, max_length=100, null=True)),
                ('note1', models.CharField(blank=True, max_length=100, null=True)),
                ('note2', models.CharField(blank=True, max_length=100, null=True)),
                ('note3', models.CharField(blank=True, max_length=100, null=True)),
                ('note4', models.CharField(blank=True, max_length=100, null=True)),
                ('note5', models.CharField(blank=True, max_length=100, null=True)),
                ('note6', models.CharField(blank=True, max_length=100, null=True)),
                ('lower_img', models.TextField(blank=True, null=True)),
                ('upper_img', models.TextField(blank=True, null=True)),
                ('side_img', models.TextField(blank=True, null=True)),
                ('plaque_img', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('status_modified_date', models.DateField(blank=True, null=True)),
                ('fix_count', models.IntegerField(blank=True, null=True)),
                ('wash_count', models.IntegerField(blank=True, null=True)),
                ('usingdate', models.DateField(blank=True, db_column='usingDate', null=True)),
                ('work', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'mold_test_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoldTest1Backup',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('accum_shot', models.BigIntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('form', models.CharField(blank=True, max_length=100, null=True)),
                ('asset', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
                ('producer', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_location', models.CharField(blank=True, max_length=100, null=True)),
                ('input_date', models.DateField(blank=True, null=True)),
                ('standard_inspection', models.IntegerField(blank=True, null=True)),
                ('mold_size', models.CharField(blank=True, max_length=100, null=True)),
                ('standard_wash', models.IntegerField(blank=True, null=True)),
                ('texture', models.CharField(blank=True, max_length=100, null=True)),
                ('machine_type', models.CharField(blank=True, max_length=100, null=True)),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('part', models.CharField(blank=True, max_length=100, null=True)),
                ('produce_date', models.DateField(blank=True, null=True)),
                ('count', models.CharField(blank=True, max_length=100, null=True)),
                ('stroke_count', models.IntegerField(blank=True, null=True)),
                ('guaranteed_shot', models.IntegerField(blank=True, null=True)),
                ('mold_type', models.CharField(blank=True, max_length=100, null=True)),
                ('gate_type', models.CharField(blank=True, max_length=100, null=True)),
                ('shrink', models.CharField(blank=True, max_length=100, null=True)),
                ('cavity', models.CharField(blank=True, max_length=100, null=True)),
                ('slide_core', models.CharField(blank=True, max_length=100, null=True)),
                ('p_lock', models.CharField(blank=True, max_length=100, null=True)),
                ('note1', models.CharField(blank=True, max_length=100, null=True)),
                ('note2', models.CharField(blank=True, max_length=100, null=True)),
                ('note3', models.CharField(blank=True, max_length=100, null=True)),
                ('note4', models.CharField(blank=True, max_length=100, null=True)),
                ('note5', models.CharField(blank=True, max_length=100, null=True)),
                ('note6', models.CharField(blank=True, max_length=100, null=True)),
                ('lower_img', models.TextField(blank=True, null=True)),
                ('upper_img', models.TextField(blank=True, null=True)),
                ('side_img', models.TextField(blank=True, null=True)),
                ('plaque_img', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('status_modified_date', models.DateField(blank=True, null=True)),
                ('fix_count', models.IntegerField(blank=True, null=True)),
                ('wash_count', models.IntegerField(blank=True, null=True)),
                ('usingdate', models.DateField(blank=True, db_column='usingDate', null=True)),
                ('work', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'mold_test_1_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('inspectionnum', models.CharField(db_column='inspectionNum', max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('assemblypn', models.CharField(db_column='assemblyPN', max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('normalcount', models.IntegerField(db_column='normalCount')),
                ('boxcount', models.IntegerField(db_column='boxCount')),
                ('packagingcommitdate', models.DateTimeField(db_column='packagingCommitDate')),
                ('packagingcommitworker', models.CharField(db_column='packagingCommitWorker', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('checkpackaging', models.CharField(db_column='checkPackaging', max_length=5)),
            ],
            options={
                'db_table': 'packaging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackagingTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('inspectionnum', models.CharField(blank=True, db_column='inspectionNum', max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('assemblypn', models.CharField(blank=True, db_column='assemblyPN', max_length=30, null=True)),
                ('partnumber', models.CharField(blank=True, db_column='partNumber', max_length=30, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('lotno', models.CharField(blank=True, db_column='lotNo', max_length=30, null=True)),
                ('normalcount', models.IntegerField(blank=True, db_column='normalCount', null=True)),
                ('boxcount', models.IntegerField(blank=True, db_column='boxCount', null=True)),
                ('packagingcommitdate', models.DateTimeField(blank=True, db_column='packagingCommitDate', null=True)),
                ('packagingcommitworker', models.CharField(blank=True, db_column='packagingCommitWorker', max_length=30, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('checkpackaging', models.CharField(blank=True, db_column='checkPackaging', max_length=5, null=True)),
                ('barcodenum', models.CharField(blank=True, db_column='barcodeNum', max_length=100, null=True)),
            ],
            options={
                'db_table': 'packaging_Test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('packingdate', models.DateTimeField(db_column='packingDate')),
                ('packingworker', models.CharField(db_column='packingWorker', max_length=30)),
                ('usingworkingnum', models.CharField(db_column='usingWorkingNum', max_length=100)),
                ('usingworkingnumstock', models.IntegerField(db_column='usingWorkingNumStock')),
                ('note', models.CharField(max_length=100)),
                ('printstate', models.CharField(db_column='printState', max_length=20)),
                ('checkshipment', models.CharField(db_column='checkShipment', max_length=5)),
                ('shippingdate', models.DateTimeField(blank=True, db_column='shippingDate', null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('pdf_path', models.CharField(blank=True, max_length=3000, null=True)),
                ('is_inspection_completed', models.CharField(blank=True, max_length=100, null=True)),
                ('inspection_complete_date', models.DateTimeField(blank=True, null=True)),
                ('storage', models.CharField(max_length=100)),
                ('issemiproduct', models.CharField(db_column='isSemiProduct', max_length=5)),
            ],
            options={
                'db_table': 'packing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartsManagement',
            fields=[
                ('no', models.AutoField(db_column='No', primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=255, null=True)),
                ('occur_date', models.DateTimeField(blank=True, null=True)),
                ('occur_location', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_count', models.CharField(blank=True, max_length=100, null=True)),
                ('phenomenon', models.CharField(blank=True, max_length=3000, null=True)),
                ('reason', models.CharField(blank=True, max_length=3000, null=True)),
                ('solution', models.CharField(blank=True, max_length=3000, null=True)),
                ('progress', models.CharField(blank=True, max_length=3000, null=True)),
                ('schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('gyr', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('writer', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'parts_management',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdfHomeDirectory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(blank=True, max_length=3000, null=True)),
                ('menuname', models.CharField(blank=True, db_column='menuName', max_length=100, null=True)),
            ],
            options={
                'db_table': 'pdf_home_directory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_num', models.CharField(blank=True, max_length=100, null=True)),
                ('lot_no', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('check_code', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('item_name', models.CharField(blank=True, max_length=100, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('level1', models.CharField(blank=True, max_length=100, null=True)),
                ('level2', models.CharField(blank=True, max_length=100, null=True)),
                ('level3', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_check', models.CharField(blank=True, max_length=100, null=True)),
                ('production_quantity', models.IntegerField(blank=True, null=True)),
                ('worker', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'performance_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PopImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dong', models.CharField(blank=True, max_length=100, null=True)),
                ('facility', models.CharField(blank=True, max_length=100, null=True)),
                ('work', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('img1', models.TextField(blank=True, null=True)),
                ('img2', models.TextField(blank=True, null=True)),
                ('img3', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pop_img',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrimaryMaterialWarehouse',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('stock', models.IntegerField()),
                ('partinputdate', models.DateTimeField(db_column='partInputDate')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('storage', models.CharField(blank=True, max_length=30, null=True)),
                ('usingworkingnum', models.CharField(db_column='usingWorkingNum', max_length=30)),
                ('is_used', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'primary_material_warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrimaryMaterialWarehousing',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('warehousingdate', models.DateField(db_column='warehousingDate')),
                ('warehousingworker', models.CharField(db_column='warehousingWorker', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('printstate', models.CharField(db_column='printState', max_length=20)),
                ('carrystate', models.CharField(db_column='carryState', max_length=5)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('pdf_path', models.TextField(blank=True, null=True)),
                ('storage', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'primary_material_warehousing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QualityManage',
            fields=[
                ('no', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('defect_type', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_location', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_count', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_stage', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('occur_date', models.DateTimeField(blank=True, null=True)),
                ('whole_img', models.TextField(blank=True, null=True)),
                ('defect_img', models.TextField(blank=True, null=True)),
                ('img3', models.TextField(blank=True, null=True)),
                ('img4', models.TextField(blank=True, null=True)),
                ('img5', models.TextField(blank=True, null=True)),
                ('img6', models.TextField(blank=True, null=True)),
                ('img7', models.TextField(blank=True, null=True)),
                ('img8', models.TextField(blank=True, null=True)),
                ('img9', models.TextField(blank=True, null=True)),
                ('img10', models.TextField(blank=True, null=True)),
                ('img11', models.TextField(blank=True, null=True)),
                ('img12', models.TextField(blank=True, null=True)),
                ('quick_fix', models.CharField(blank=True, max_length=100, null=True)),
                ('cause', models.CharField(blank=True, max_length=100, null=True)),
                ('evaluation', models.CharField(blank=True, max_length=100, null=True)),
                ('evaluation_schedule', models.DateTimeField(blank=True, null=True)),
                ('evaluation_complete', models.DateTimeField(blank=True, null=True)),
                ('evaluation_apply', models.DateTimeField(blank=True, null=True)),
                ('prevention', models.CharField(blank=True, max_length=100, null=True)),
                ('horizontal', models.CharField(blank=True, max_length=100, null=True)),
                ('inspection_1st', models.CharField(blank=True, max_length=100, null=True)),
                ('inspection_2nd', models.CharField(blank=True, max_length=100, null=True)),
                ('inspection_3rd', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('item_num', models.CharField(blank=True, max_length=100, null=True)),
                ('improvement', models.CharField(blank=True, max_length=255, null=True)),
                ('working_num', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'quality_manage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequiredAmountCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('checkdate', models.DateField(blank=True, db_column='checkDate', null=True)),
                ('order_count', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'required_amount_check',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('workingnum', models.CharField(db_column='workingNum', max_length=50)),
                ('dong', models.CharField(blank=True, max_length=30, null=True)),
                ('facility', models.CharField(blank=True, max_length=30, null=True)),
                ('work', models.CharField(blank=True, max_length=30, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('worker', models.CharField(blank=True, max_length=30, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('inputdate', models.CharField(blank=True, db_column='inputDate', max_length=30, null=True)),
                ('datetime', models.DateTimeField(blank=True, db_column='DateTime', null=True)),
                ('count', models.CharField(blank=True, max_length=20, null=True)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_ordered', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_price', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('workingnum', models.CharField(db_column='workingNum', max_length=50)),
                ('dong', models.CharField(blank=True, max_length=30, null=True)),
                ('facility', models.CharField(blank=True, max_length=30, null=True)),
                ('work', models.CharField(blank=True, max_length=30, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('worker', models.CharField(blank=True, max_length=30, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('inputdate', models.CharField(blank=True, db_column='inputDate', max_length=30, null=True)),
                ('datetime', models.DateTimeField(blank=True, db_column='DateTime', null=True)),
                ('count', models.CharField(blank=True, max_length=20, null=True)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Schedule_Test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seojinmodbus',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('normalcount', models.IntegerField(db_column='normalCount')),
                ('defectcount', models.IntegerField(db_column='defectCount')),
                ('daycount', models.IntegerField(db_column='dayCount')),
                ('allcount', models.IntegerField(db_column='allCount')),
            ],
            options={
                'db_table': 'seojinModbus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipmentcomplete',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('assemblypn', models.CharField(db_column='assemblyPN', max_length=30)),
                ('shippingdate', models.DateTimeField(db_column='shippingDate')),
                ('shippingworker', models.CharField(db_column='shippingWorker', max_length=30)),
                ('boxcount', models.IntegerField(db_column='boxCount')),
                ('normalcount', models.IntegerField(db_column='normalCount')),
                ('barcodenum', models.CharField(db_column='barcodeNum', max_length=30)),
                ('note', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'shipmentComplete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShipmentcompleteTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('assemblypn', models.CharField(blank=True, db_column='assemblyPN', max_length=30, null=True)),
                ('shippingdate', models.DateTimeField(blank=True, db_column='shippingDate', null=True)),
                ('shippingworker', models.CharField(blank=True, db_column='shippingWorker', max_length=30, null=True)),
                ('boxcount', models.IntegerField(blank=True, db_column='boxCount', null=True)),
                ('normalcount', models.IntegerField(blank=True, db_column='normalCount', null=True)),
                ('barcodenum', models.CharField(blank=True, db_column='barcodeNum', max_length=30, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'shipmentComplete_Test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipmentinspection',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('inspectionnum', models.CharField(db_column='inspectionNum', max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('assemblypn', models.CharField(db_column='assemblyPN', max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('normalcount', models.IntegerField(db_column='normalCount')),
                ('boxcount', models.IntegerField(db_column='boxCount')),
                ('packagingdate', models.DateTimeField(db_column='packagingDate')),
                ('packagingworker', models.CharField(db_column='packagingWorker', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('barcodenum', models.CharField(db_column='barcodeNum', max_length=30)),
                ('checkinspection', models.CharField(db_column='checkInspection', max_length=5)),
            ],
            options={
                'db_table': 'shipmentInspection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShipmentinspectionTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('inspectionnum', models.CharField(blank=True, db_column='inspectionNum', max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('assemblypn', models.CharField(blank=True, db_column='assemblyPN', max_length=30, null=True)),
                ('partnumber', models.CharField(blank=True, db_column='partNumber', max_length=30, null=True)),
                ('normalcount', models.IntegerField(blank=True, db_column='normalCount', null=True)),
                ('boxcount', models.IntegerField(blank=True, db_column='boxCount', null=True)),
                ('packagingdate', models.DateTimeField(blank=True, db_column='packagingDate', null=True)),
                ('packagingworker', models.CharField(blank=True, db_column='packagingWorker', max_length=30, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('barcodenum', models.CharField(blank=True, db_column='barcodeNum', max_length=30, null=True)),
                ('checkinspection', models.CharField(blank=True, db_column='checkInspection', max_length=5, null=True)),
            ],
            options={
                'db_table': 'shipmentInspection_Test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShipmentWarehouse',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('assemblypn', models.CharField(db_column='assemblyPN', max_length=30)),
                ('shippinginspectiondate', models.DateTimeField(db_column='shippingInspectionDate')),
                ('shippinginspectionworker', models.CharField(db_column='shippingInspectionWorker', max_length=30)),
                ('boxcount', models.IntegerField(db_column='boxCount')),
                ('normalcount', models.IntegerField(db_column='normalCount')),
                ('barcodenum', models.CharField(db_column='barcodeNum', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('checkshipment', models.CharField(db_column='checkShipment', max_length=5)),
            ],
            options={
                'db_table': 'Shipment_Warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'storage_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usingstocktoinspection',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('packingnum', models.CharField(db_column='packingNum', max_length=100)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(max_length=100)),
                ('assemblenumber', models.CharField(db_column='assembleNumber', max_length=30)),
                ('stock', models.IntegerField()),
                ('usingworkingnum', models.CharField(db_column='usingWorkingNum', max_length=50)),
                ('completecount', models.IntegerField(db_column='completeCount')),
                ('defectcount', models.IntegerField(db_column='defectCount')),
                ('completedate', models.DateField(blank=True, db_column='completeDate', null=True)),
            ],
            options={
                'db_table': 'usingStockToInspection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usingstocktoschedule',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('dong', models.CharField(max_length=100)),
                ('facility', models.CharField(max_length=100)),
                ('work', models.CharField(max_length=100)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('assemblenumber', models.CharField(db_column='assembleNumber', max_length=30)),
                ('assemblecount', models.IntegerField(db_column='assembleCount')),
                ('usingstock', models.IntegerField(db_column='usingStock')),
                ('workingnum', models.CharField(db_column='workingNum', max_length=30)),
                ('scheduledate', models.DateField(db_column='scheduleDate')),
            ],
            options={
                'db_table': 'usingStockToSchedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('importinspectiondate', models.DateTimeField(db_column='importInspectionDate')),
                ('importinspectionworker', models.CharField(db_column='importInspectionWorker', max_length=100)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=50, null=True)),
                ('defect', models.CharField(blank=True, max_length=30, null=True)),
                ('note', models.CharField(blank=True, max_length=100, null=True)),
                ('barcode', models.CharField(blank=True, max_length=30, null=True)),
                ('use_location', models.CharField(blank=True, db_column='Use_Location', max_length=50, null=True)),
                ('visible', models.IntegerField()),
            ],
            options={
                'db_table': 'warehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Warehousing',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('warehousingdate', models.DateField(db_column='warehousingDate')),
                ('warehousingworker', models.CharField(db_column='warehousingWorker', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('printstate', models.CharField(db_column='printState', max_length=20)),
                ('carrystate', models.CharField(db_column='carryState', max_length=5)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('pdf_path', models.TextField(blank=True, null=True)),
                ('storage', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'warehousing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WarehousingTest',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=30)),
                ('partnumber', models.CharField(db_column='partNumber', max_length=30)),
                ('quantity', models.IntegerField()),
                ('lotno', models.CharField(db_column='lotNo', max_length=30)),
                ('warehousingdate', models.DateTimeField(db_column='warehousingDate')),
                ('warehousingworker', models.CharField(db_column='warehousingWorker', max_length=30)),
                ('note', models.CharField(max_length=100)),
                ('printstate', models.CharField(db_column='printState', max_length=20)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'warehousing_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('wid', models.AutoField(primary_key=True, serialize=False)),
                ('workername', models.CharField(db_column='workerName', max_length=20)),
            ],
            options={
                'db_table': 'Worker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('uid', models.BigAutoField(primary_key=True, serialize=False)),
                ('workingnum', models.CharField(blank=True, db_column='workingNum', max_length=3000, null=True)),
                ('dong', models.CharField(blank=True, max_length=100, null=True)),
                ('facility', models.CharField(blank=True, max_length=100, null=True)),
                ('work', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('worker', models.CharField(blank=True, max_length=100, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('inputdate', models.DateField(blank=True, null=True)),
                ('lot_no', models.CharField(blank=True, max_length=100, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_num', models.CharField(blank=True, max_length=100, null=True)),
                ('mold_shot', models.BigIntegerField(blank=True, null=True)),
                ('material_name', models.CharField(blank=True, max_length=100, null=True)),
                ('order_num', models.IntegerField(blank=True, null=True)),
                ('today', models.IntegerField(blank=True, null=True)),
                ('remain', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_account', models.CharField(blank=True, max_length=100, null=True)),
                ('barcode_print', models.CharField(blank=True, max_length=100, null=True)),
                ('defect_count', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_price', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'work_order',
                'managed': False,
            },
        ),
    ]
